// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieVoting.Models;

namespace MovieVoting.Migrations
{
    [DbContext(typeof(AddMovieContext))]
    partial class AddMovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("MovieVoting.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Action / Adventure"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Family"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Horror / Suspense"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Miscellaneous"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Romantic"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Thriller"
                        });
                });

            modelBuilder.Entity("MovieVoting.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateWatched")
                        .HasColumnType("TEXT");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumVotes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Voting")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId");

                    b.HasIndex("CategoryId");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CategoryId = 1,
                            Length = "126",
                            NumVotes = 0,
                            Title = "Karate Kid",
                            Voting = true,
                            Watched = false
                        },
                        new
                        {
                            MovieId = 2,
                            CategoryId = 1,
                            Length = "152",
                            NumVotes = 0,
                            Title = "The Dark Knight",
                            Voting = true,
                            Watched = false
                        },
                        new
                        {
                            MovieId = 3,
                            CategoryId = 8,
                            Length = "155",
                            NumVotes = 0,
                            Title = "Dune",
                            Voting = true,
                            Watched = false
                        },
                        new
                        {
                            MovieId = 4,
                            CategoryId = 7,
                            Length = "124",
                            NumVotes = 0,
                            Title = "The Notebook",
                            Voting = false,
                            Watched = false
                        });
                });

            modelBuilder.Entity("MovieVoting.Models.Movie", b =>
                {
                    b.HasOne("MovieVoting.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
